apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'de.mannodermaus.android-junit5'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "info.maaskant.wmsnotes"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 6
        versionName "0.0.6"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile rootProject.file(keystoreProperties["storeFile"])
            storePassword keystoreProperties["storePassword"]
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
            testLogging {
                events "skipped", "failed"
                exceptionFormat = "full"
            }
        }
    }
}

//configurations.all {
//    // Check for updates every build
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}

dependencies {
    // Default stuff
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // WMS Notes
    //implementation group: 'info.maaskant.wmsnotes', name: 'shared', version: "$versions.wmsnotes", changing: true
    implementation "com.github.scheleaap:wmsnotes-desktop-and-server:f9c5dcc848754d69b3fdd2a4e0745e7851b1a829"

    // Infrastructure
//    implementation 'org.slf4j:slf4j-android:1.7.25'
    implementation "com.jakewharton.timber:timber:$versions.timber"
    implementation "com.arcao:slf4j-timber:$versions.slf4jtimber"
    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
// TODO: LEAK TESTING
    implementation /*debugImplementation*/ "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
    implementation /*debugImplementation*/ "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakcanary"
    /*releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"*/
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"

    // RxJava and background execution.
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation("android.arch.work:work-runtime-ktx:$versions.workmanager") {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    // gRPC
    implementation "io.grpc:grpc-okhttp:$versions.grpc"

    // UI
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation "com.mikepenz:materialdrawer:$versions.materialdrawer"
    implementation "com.github.baurine:permission-util:$versions.permissionutil"
    implementation "ru.noties:markwon:$versions.markwon"

    // Testing
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.junit"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$versions.junit"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$versions.junit"
    testImplementation("org.assertj:assertj-core:$versions.assertj")
    // See also https://blog.philipphauer.de/best-practices-unit-testing-kotlin/
    testImplementation "io.mockk:mockk:$versions.mockk"
}
