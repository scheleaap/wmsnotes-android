apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'de.mannodermaus.android-junit5'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "info.maaskant.wmsnotes"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 19
        versionName "0.0.19"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile rootProject.file(keystoreProperties["storeFile"])
            storePassword keystoreProperties["storePassword"]
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
            testLogging {
                events "skipped", "failed"
                exceptionFormat = "full"
            }
        }
    }
}

//configurations.all {
//    // Check for updates every build
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}

dependencies {
    // Default stuff
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha02'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // WMS Notes
//    implementation group: 'info.maaskant.wmsnotes', name: 'shared', version: "0.0.3-SNAPSHOT", changing: true
    implementation "com.github.scheleaap:wmsnotes-desktop-and-server:8b26858516f8bea344aa20c9a2412145970f1bc6"

    // Logging
    implementation "org.slf4j:slf4j-api:1.7.25"
    implementation "com.github.tony19:logback-android:2.0.0"

    // Dependency Injection
    final def dagger = "2.16"
    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    // Leak Testing
    final def leakcanary = "2.0-alpha-3"
    implementation "com.squareup.leakcanary:leaksentry:$leakcanary"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary"

    // RxJava and background execution
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.sellmair:disposer:2.0.0'

    // gRPC
    implementation "io.grpc:grpc-okhttp:1.16.1"

    // Preferences
    implementation 'androidx.preference:preference-ktx:1.1.0-rc01'
    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'

    // UI
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha02'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta01'
    def materialdialogs = "2.8.1"
    implementation "com.afollestad.material-dialogs:core:$materialdialogs"
    implementation "com.afollestad.material-dialogs:input:$materialdialogs"
    implementation "com.afollestad.material-dialogs:lifecycle:$materialdialogs"
    implementation "com.mikepenz:materialdrawer:6.1.1"
    implementation "com.github.baurine:permission-util:1.0.3"
    def glide = "4.9.0"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    final def markwon = "4.0.2"
    implementation "io.noties.markwon:core:$markwon"
    implementation "io.noties.markwon:ext-strikethrough:$markwon"
    implementation "io.noties.markwon:ext-tables:$markwon"
    implementation "io.noties.markwon:html:$markwon"
    implementation "io.noties.markwon:image-glide:$markwon"

    // Testing
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    def junit = "5.5.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit"
    testImplementation("org.assertj:assertj-core:3.12.2")
    // See also https://blog.philipphauer.de/best-practices-unit-testing-kotlin/
    testImplementation "io.mockk:mockk:1.9.2"
}
